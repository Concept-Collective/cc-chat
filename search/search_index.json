{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Installation","text":"<p>Official guide to installing CC Chat.</p>"},{"location":"#dependencies","title":"Dependencies","text":"<ul> <li>Chat</li> </ul>"},{"location":"#download","title":"Download","text":"<ul> <li>Download the latest releases of cc-chat.</li> </ul>"},{"location":"#install","title":"Install","text":"<ul> <li>Create a new folder in your resources folder named <code>cc-chat</code></li> <li>Extract the archive's contents to your <code>cc-chat</code> folder.</li> <li>ensure <code>cc-chat</code> anywhere after the default <code>chat</code> resource in your <code>server.cfg</code>.</li> </ul>"},{"location":"#update","title":"Update","text":"<ul> <li>Navigate to the download link located in your servers terminal and proceed to download the archive </li> <li>Open the downloaded archive and extract the contents to your existing <code>cc-chat</code> directory making sure to replace any existing file</li> </ul>"},{"location":"create-suggestion/","title":"Creating Suggestions","text":""},{"location":"create-suggestion/#example","title":"Example","text":"lua <pre><code>-- Client\nCitizen.CreateThread(function()\n    TriggerEvent('chat:addSuggestion', '/ooc', 'Out of character', {\n        { name=\"Message\", help=\"The message you would like to send to the chat\" }\n    })\n\n    TriggerEvent('chat:addSuggestion', '/ban', 'Ban command', {\n        { name=\"Player ID\", help=\"The player ID to ban\" },\n        { name=\"Reason\", help=\"Reason for baning the player\" }\n    })\n\n    TriggerEvent('chat:addSuggestion', '/twt', 'Twitter', {\n        { name=\"Message\", help=\"The message you would like to send as a tweet\" }\n    })\nend)\n</code></pre>"},{"location":"create-suggestion/#more-information","title":"More Information","text":"<ul> <li>A detailed explanation can be found on FiveM Docs here.</li> </ul>"},{"location":"exports/","title":"Exports","text":""},{"location":"exports/#introduction","title":"Introduction","text":"<p>A guide on the pre packaged exports</p>"},{"location":"exports/#setup","title":"Setup","text":"<p>This variable must be near the top of your script to use CC Chat exports.</p> lua <pre><code>local ccChat = exports['cc-chat']\n</code></pre>"},{"location":"exports/#client-exports","title":"Client Exports","text":"<p>These exports can only be ran on the client side</p>"},{"location":"exports/#gettimestamp","title":"getTimestamp","text":""},{"location":"exports/#explination","title":"Explination","text":"<p>Get's clients local time in the format <code>HH:MM XX</code></p>"},{"location":"exports/#usage","title":"Usage","text":"lua <pre><code>local timestamp = ccChat:getTimestamp()\n</code></pre>"},{"location":"exports/#server-exports","title":"Server Exports","text":"<p>These exports can only be ran on the server side</p>"},{"location":"exports/#gettimestamp_1","title":"getTimestamp","text":""},{"location":"exports/#explination_1","title":"Explination","text":"<p>Checks if a client is spamming. returns a boolen</p>"},{"location":"exports/#usage_1","title":"Usage","text":"lua <pre><code>if ccChat:checkSpam(source, message) then\n  -- Code to run if the client is spamming chat\nelse\n  -- Code to run if the client is not spaming chat\nend\n</code></pre>"},{"location":"message-template/","title":"Creating Messages","text":""},{"location":"message-template/#introduction","title":"Introduction","text":"<p>How to send messages with the custom template </p>"},{"location":"message-template/#syntax","title":"Syntax","text":"lua <pre><code>templateId = 'ccChat',\nmultiline =  false,\nargs = {\n    color,\n    icon,\n    subtitle,\n    timestamp,\n    msg \n}\n</code></pre>"},{"location":"message-template/#arguments","title":"Arguments","text":"Argument Data Type Explanation <code>color</code> String Accent Color of the message; Accepts <code>HEX</code>, <code>RGB</code> &amp; <code>HSL</code>. <code>icon</code> String The icon on the message found at FontAwesome. <code>subtitle</code> String The string next to the icon. <code>timestamp</code> String The string on the top right of the message. <code>msg</code> String The main message being sent."},{"location":"message-template/#example","title":"Example","text":"lua <pre><code>-- Server\nTriggerClientEvent('chat:addMessage', -1 , {\n    templateId =  'ccChat',\n    multiline =  false,\n    args = {\n        '#e74c3c',\n        'fa-solid fa-fire',\n        'Lit',\n        '',\n        'This message is lit!'\n    } \n})\n</code></pre>"},{"location":"message-template/#example-result","title":"Example Result","text":""}]}